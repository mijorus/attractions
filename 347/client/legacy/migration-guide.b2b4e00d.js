import{S as s,i as n,s as t,P as a,q as e,t as o,u as r,Z as p,a4 as c,w as i,x as l,y as u,Q as $,z as m,p as f,B as d,r as g,h as k,j as h,k as y,l as v,A as x,C as w,m as S,o as E}from"./client.55e71079.js";import{H as b,P as A,L as O}from"./layout.16dba64b.js";import{L as P}from"./layout-no-head.e4f26d6d.js";import{H as j}from"./h2.cd2c239d.js";function H(s){let n;return{c(){n=x("Migration Guide")},l(s){n=w(s,"Migration Guide")},m(s,t){v(s,n,t)},d(s){s&&h(n)}}}function C(s){let n;return{c(){n=x("Here you may find guidance on upgrading Attractions from one major version to another.")},l(s){n=w(s,"Here you may find guidance on upgrading Attractions from one major version to another.")},m(s,t){v(s,n,t)},d(s){s&&h(n)}}}function D(s){let n;return{c(){n=x("From v2.x to v3.x")},l(s){n=w(s,"From v2.x to v3.x")},m(s,t){v(s,n,t)},d(s){s&&h(n)}}}function M(s){let n;return{c(){n=x("The main change in version 3 is the migration to Sass modules.")},l(s){n=w(s,"The main change in version 3 is the migration to Sass modules.")},m(s,t){v(s,n,t)},d(s){s&&h(n)}}}function T(s){let n,t,a,e,o,r,p;return{c(){n=x("If you have existing code that used Sass for styling and was using the old "),t=f("code"),a=x("@import"),e=x(" statements, consider using the automatic "),o=f("a"),r=x("Sass Migrator"),p=x(" tool first."),this.h()},l(s){n=w(s,"If you have existing code that used Sass for styling and was using the old "),t=g(s,"CODE",{});var c=k(t);a=w(c,"@import"),c.forEach(h),e=w(s," statements, consider using the automatic "),o=g(s,"A",{href:!0,rel:!0});var i=k(o);r=w(i,"Sass Migrator"),i.forEach(h),p=w(s," tool first."),this.h()},h(){y(o,"href","https://sass-lang.com/documentation/cli/migrator"),y(o,"rel","nofollow")},m(s,c){v(s,n,c),v(s,t,c),S(t,a),v(s,e,c),v(s,o,c),S(o,r),v(s,p,c)},p:E,d(s){s&&h(n),s&&h(t),s&&h(e),s&&h(o),s&&h(p)}}}function L(s){let n,t,a,e,o,r,p,c,i,l,u,$;return{c(){n=f("strong"),t=x("Heads up"),a=x(": if your styles used imports that relied on "),e=f("code"),o=x("includePaths"),r=x(", you can still make Sass Migrator understand them by setting the "),p=f("code"),c=x("SASS_PATH"),i=x(" environment variable to the path that you previously had in your "),l=f("code"),u=x("includePaths"),$=x(" Sass compiler option.")},l(s){n=g(s,"STRONG",{});var m=k(n);t=w(m,"Heads up"),m.forEach(h),a=w(s,": if your styles used imports that relied on "),e=g(s,"CODE",{});var f=k(e);o=w(f,"includePaths"),f.forEach(h),r=w(s,", you can still make Sass Migrator understand them by setting the "),p=g(s,"CODE",{});var d=k(p);c=w(d,"SASS_PATH"),d.forEach(h),i=w(s," environment variable to the path that you previously had in your "),l=g(s,"CODE",{});var y=k(l);u=w(y,"includePaths"),y.forEach(h),$=w(s," Sass compiler option.")},m(s,m){v(s,n,m),S(n,t),v(s,a,m),v(s,e,m),S(e,o),v(s,r,m),v(s,p,m),S(p,c),v(s,i,m),v(s,l,m),S(l,u),v(s,$,m)},p:E,d(s){s&&h(n),s&&h(a),s&&h(e),s&&h(r),s&&h(p),s&&h(i),s&&h(l),s&&h($)}}}function _(s){let n,t,a,e,o,r,p;return{c(){n=x("Once your code is ready for Sass modules, replace Node Sass ("),t=f("code"),a=x("node-sass"),e=x(") with Dart Sass ("),o=f("code"),r=x("sass"),p=x(").")},l(s){n=w(s,"Once your code is ready for Sass modules, replace Node Sass ("),t=g(s,"CODE",{});var c=k(t);a=w(c,"node-sass"),c.forEach(h),e=w(s,") with Dart Sass ("),o=g(s,"CODE",{});var i=k(o);r=w(i,"sass"),i.forEach(h),p=w(s,").")},m(s,c){v(s,n,c),v(s,t,c),S(t,a),v(s,e,c),v(s,o,c),S(o,r),v(s,p,c)},p:E,d(s){s&&h(n),s&&h(t),s&&h(e),s&&h(o),s&&h(p)}}}function I(s){let n,t,a,e;return{c(){n=x("Update your "),t=f("code"),a=x("rollup.config.js"),e=x(" to use the new Attractions importers:")},l(s){n=w(s,"Update your "),t=g(s,"CODE",{});var o=k(t);a=w(o,"rollup.config.js"),o.forEach(h),e=w(s," to use the new Attractions importers:")},m(s,o){v(s,n,o),v(s,t,o),S(t,a),v(s,e,o)},p:E,d(s){s&&h(n),s&&h(t),s&&h(e)}}}function G(s){let n,t,a,e;return{c(){n=x("Lastly, if your "),t=f("code"),a=x("_attractions-theme.scss"),e=x(" had any variable overrides, move them to the module configuration.")},l(s){n=w(s,"Lastly, if your "),t=g(s,"CODE",{});var o=k(t);a=w(o,"_attractions-theme.scss"),o.forEach(h),e=w(s," had any variable overrides, move them to the module configuration.")},m(s,o){v(s,n,o),v(s,t,o),S(t,a),v(s,e,o)},p:E,d(s){s&&h(n),s&&h(t),s&&h(e)}}}function R(s){let n;return{c(){n=x("Before:")},l(s){n=w(s,"Before:")},m(s,t){v(s,n,t)},d(s){s&&h(n)}}}function B(s){let n;return{c(){n=x("After:")},l(s){n=w(s,"After:")},m(s,t){v(s,n,t)},d(s){s&&h(n)}}}function F(s){let n,t,a,p,c,$,x,w,S,E,O,P,F,N,U,q,z,Q,Z,J,K,V,W,X,Y,ss,ns,ts;return n=new b({props:{$$slots:{default:[H]},$$scope:{ctx:s}}}),a=new A({props:{$$slots:{default:[C]},$$scope:{ctx:s}}}),c=new j({props:{$$slots:{default:[D]},$$scope:{ctx:s}}}),x=new A({props:{$$slots:{default:[M]},$$scope:{ctx:s}}}),S=new A({props:{$$slots:{default:[T]},$$scope:{ctx:s}}}),O=new A({props:{$$slots:{default:[L]},$$scope:{ctx:s}}}),F=new A({props:{$$slots:{default:[_]},$$scope:{ctx:s}}}),U=new A({props:{$$slots:{default:[I]},$$scope:{ctx:s}}}),Z=new A({props:{$$slots:{default:[G]},$$scope:{ctx:s}}}),K=new A({props:{$$slots:{default:[R]},$$scope:{ctx:s}}}),Y=new A({props:{$$slots:{default:[B]},$$scope:{ctx:s}}}),{c(){e(n.$$.fragment),t=m(),e(a.$$.fragment),p=m(),e(c.$$.fragment),$=m(),e(x.$$.fragment),w=m(),e(S.$$.fragment),E=m(),e(O.$$.fragment),P=m(),e(F.$$.fragment),N=m(),e(U.$$.fragment),q=m(),z=f("pre"),Q=m(),e(Z.$$.fragment),J=m(),e(K.$$.fragment),V=m(),W=f("pre"),X=m(),e(Y.$$.fragment),ss=m(),ns=f("pre"),this.h()},l(s){o(n.$$.fragment,s),t=d(s),o(a.$$.fragment,s),p=d(s),o(c.$$.fragment,s),$=d(s),o(x.$$.fragment,s),w=d(s),o(S.$$.fragment,s),E=d(s),o(O.$$.fragment,s),P=d(s),o(F.$$.fragment,s),N=d(s),o(U.$$.fragment,s),q=d(s),z=g(s,"PRE",{class:!0}),k(z).forEach(h),Q=d(s),o(Z.$$.fragment,s),J=d(s),o(K.$$.fragment,s),V=d(s),W=g(s,"PRE",{class:!0}),k(W).forEach(h),X=d(s),o(Y.$$.fragment,s),ss=d(s),ns=g(s,"PRE",{class:!0}),k(ns).forEach(h),this.h()},h(){y(z,"class","language-js"),y(W,"class","language-scss"),y(ns,"class","language-scss")},m(s,e){r(n,s,e),v(s,t,e),r(a,s,e),v(s,p,e),r(c,s,e),v(s,$,e),r(x,s,e),v(s,w,e),r(S,s,e),v(s,E,e),r(O,s,e),v(s,P,e),r(F,s,e),v(s,N,e),r(U,s,e),v(s,q,e),v(s,z,e),z.innerHTML='<code class="language-js"><span class="token keyword">import</span> autoPreprocess <span class="token keyword">from</span> <span class="token string">\'svelte-preprocess\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> makeAttractionsImporter <span class="token keyword">from</span> <span class="token string">\'attractions/importer.js\'</span><span class="token punctuation">;</span>\n\n<span class="token keyword">const</span> preprocessChain <span class="token operator">=</span> <span class="token punctuation">[</span>\n  <span class="token function">autoPreprocess</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n    <span class="token literal-property property">scss</span><span class="token operator">:</span> <span class="token punctuation">&#123;</span>\n      <span class="token literal-property property">importer</span><span class="token operator">:</span> <span class="token function">makeAttractionsImporter</span><span class="token punctuation">(</span><span class="token punctuation">&#123;</span>\n        <span class="token comment">// If you previously had a file that was overriding Attractions variables,</span>\n        <span class="token comment">//   provide the path to it here.</span>\n        <span class="token comment">// If it was empty, you may delete it, omit this parameter</span>\n        <span class="token comment">//   and call the function with no arguments.</span>\n        <span class="token literal-property property">themeFile</span><span class="token operator">:</span> <span class="token string">\'./static/css/_attractions-theme.scss\'</span><span class="token punctuation">,</span>\n      <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n\n      <span class="token literal-property property">includePaths</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">\'./static/css\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n    <span class="token punctuation">&#125;</span><span class="token punctuation">,</span>\n  <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>\n<span class="token punctuation">]</span><span class="token punctuation">;</span></code>',v(s,Q,e),r(Z,s,e),v(s,J,e),r(K,s,e),v(s,V,e),v(s,W,e),W.innerHTML='<code class="language-scss"><span class="token keyword">@import</span> <span class="token string">\'_attractions-theme.scss\'</span><span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$font</span></span><span class="token punctuation">:</span> <span class="token string">\'Open Sans\'</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$main</span></span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$my-custom-variable</span></span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span></code>',v(s,X,e),r(Y,s,e),v(s,ss,e),v(s,ns,e),ns.innerHTML='<code class="language-scss"><span class="token keyword">@forward</span> <span class="token string">"~attractions/_variables"</span> <span class="token module-modifier keyword">with</span> <span class="token punctuation">(</span>\n  <span class="token property"><span class="token variable">$font</span></span><span class="token punctuation">:</span> <span class="token punctuation">(</span><span class="token string">\'Open Sans\'</span><span class="token punctuation">,</span> sans-serif<span class="token punctuation">)</span><span class="token punctuation">,</span>\n  <span class="token property"><span class="token variable">$main</span></span><span class="token punctuation">:</span> green<span class="token punctuation">;</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token property"><span class="token variable">$my-custom-variable</span></span><span class="token punctuation">:</span> 1px<span class="token punctuation">;</span></code>',ts=!0},p(s,t){const e={};2&t&&(e.$$scope={dirty:t,ctx:s}),n.$set(e);const o={};2&t&&(o.$$scope={dirty:t,ctx:s}),a.$set(o);const r={};2&t&&(r.$$scope={dirty:t,ctx:s}),c.$set(r);const p={};2&t&&(p.$$scope={dirty:t,ctx:s}),x.$set(p);const i={};2&t&&(i.$$scope={dirty:t,ctx:s}),S.$set(i);const l={};2&t&&(l.$$scope={dirty:t,ctx:s}),O.$set(l);const u={};2&t&&(u.$$scope={dirty:t,ctx:s}),F.$set(u);const $={};2&t&&($.$$scope={dirty:t,ctx:s}),U.$set($);const m={};2&t&&(m.$$scope={dirty:t,ctx:s}),Z.$set(m);const f={};2&t&&(f.$$scope={dirty:t,ctx:s}),K.$set(f);const d={};2&t&&(d.$$scope={dirty:t,ctx:s}),Y.$set(d)},i(s){ts||(i(n.$$.fragment,s),i(a.$$.fragment,s),i(c.$$.fragment,s),i(x.$$.fragment,s),i(S.$$.fragment,s),i(O.$$.fragment,s),i(F.$$.fragment,s),i(U.$$.fragment,s),i(Z.$$.fragment,s),i(K.$$.fragment,s),i(Y.$$.fragment,s),ts=!0)},o(s){l(n.$$.fragment,s),l(a.$$.fragment,s),l(c.$$.fragment,s),l(x.$$.fragment,s),l(S.$$.fragment,s),l(O.$$.fragment,s),l(F.$$.fragment,s),l(U.$$.fragment,s),l(Z.$$.fragment,s),l(K.$$.fragment,s),l(Y.$$.fragment,s),ts=!1},d(s){u(n,s),s&&h(t),u(a,s),s&&h(p),u(c,s),s&&h($),u(x,s),s&&h(w),u(S,s),s&&h(E),u(O,s),s&&h(P),u(F,s),s&&h(N),u(U,s),s&&h(q),s&&h(z),s&&h(Q),u(Z,s),s&&h(J),u(K,s),s&&h(V),s&&h(W),s&&h(X),u(Y,s),s&&h(ss),s&&h(ns)}}}function N(s){let n,t;const $=[s[0]];let m={$$slots:{default:[F]},$$scope:{ctx:s}};for(let s=0;s<$.length;s+=1)m=a(m,$[s]);return n=new P({props:m}),{c(){e(n.$$.fragment)},l(s){o(n.$$.fragment,s)},m(s,a){r(n,s,a),t=!0},p(s,[t]){const a=1&t?p($,[c(s[0])]):{};2&t&&(a.$$scope={dirty:t,ctx:s}),n.$set(a)},i(s){t||(i(n.$$.fragment,s),t=!0)},o(s){l(n.$$.fragment,s),t=!1},d(s){u(n,s)}}}function U(s,n,t){return s.$$set=s=>{t(0,n=a(a({},n),$(s)))},[n=$(n)]}class q extends s{constructor(s){super(),n(this,s,U,N,t,{})}}function z(s){let n,t;return n=new q({}),{c(){e(n.$$.fragment)},l(s){o(n.$$.fragment,s)},m(s,a){r(n,s,a),t=!0},i(s){t||(i(n.$$.fragment,s),t=!0)},o(s){l(n.$$.fragment,s),t=!1},d(s){u(n,s)}}}function Q(s){let n,t;const $=[s[0],Z];let m={$$slots:{default:[z]},$$scope:{ctx:s}};for(let s=0;s<$.length;s+=1)m=a(m,$[s]);return n=new O({props:m}),{c(){e(n.$$.fragment)},l(s){o(n.$$.fragment,s)},m(s,a){r(n,s,a),t=!0},p(s,[t]){const a=1&t?p($,[1&t&&c(s[0]),0&t&&c(Z)]):{};2&t&&(a.$$scope={dirty:t,ctx:s}),n.$set(a)},i(s){t||(i(n.$$.fragment,s),t=!0)},o(s){l(n.$$.fragment,s),t=!1},d(s){u(n,s)}}}const Z={name:"Migration Guide"};function J(s,n,t){return s.$$set=s=>{t(0,n=a(a({},n),$(s)))},[n=$(n)]}class K extends s{constructor(s){super(),n(this,s,J,Q,t,{})}}export{K as default,Z as metadata};
